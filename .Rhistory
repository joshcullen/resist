dat$date<- as_datetime(dat$date)
glimpse(dat)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
glimpse(dat)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
View(dat.prep)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
View(dat.prep)
#filter for primary dt (300 s)
dat.prep<-  dat.prep %>% filter(dt == 300)
View(dat.prep)
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
?fitHMM
# allm<- list()
# niter<- 30
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
# Step length mean
stepMean0 <- c(0.25, 5)
# Step length standard deviation
stepSD0 <- c(0.1, 5)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
stepPar0
anglePar0
mod.res<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
library(tidyverse)
library(momentuHMM)
library(lubridate)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
#filter for primary dt (300 s)
dat.prep<-  dat.prep %>% filter(dt == 300)
# allm<- list()
# niter<- 30
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
# Step length mean
stepMean0 <- c(0.25, 5)
# Step length standard deviation
stepSD0 <- c(0.1, 5)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
mod.res<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
class(dat.prep)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
class(dat.prep)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<-  dat.prep %>% filter(dt == 300)
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<-  dat.prep %>% filter(dt == 300)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
class(dat.prep)
mod.res<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
View(dat.prep)
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<-  dat.prep %>% filter(dt == 300)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
View(dat.prep)
rm(dat.prep)
dat.prep<-  dat.prep %>% filter(dt == 300)
dat.prep<-  dat %>% filter(dt == 300)
dat.prep<- prepData(dat.prep, type = "UTM", coordNames = c("x", "y"))
mod.res<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
mod.res
plot(mod.res)
max(dat.prep$step)
max(dat.prep$step, na.rm = T)
which(max(dat.prep$step, na.rm = T))
which.max(dat.prep$step, na.rm = T)
which.max(dat.prep$step)
dat.prep[which(dat.prep$step == 1311.741),]
dat.prep[which(dat.prep$step > 1000),]
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
class(dat.prep)
dat.prep<-  dat[dat$dt == 300),]
dat.prep<-  dat.prep[dat.prep$dt == 300,]
class(dat.prep)
library(tictoc)
library(tidyverse)
library(momentuHMM)
library(lubridate)
library(tictoc)
# library(rgeos)
# library(raster)
# library(rgdal)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
dat.prep<-  dat.prep[dat.prep$dt == 300,]
#run HMM
## K = 2
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
class(dat.prep)
stepMean0 <- c(0.25, 5)
# Step length standard deviation
stepSD0 <- c(0.1, 5)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
toc()
1392/60
mod.res2
plot(mod.res2)
mod.res2
plot(mod.res2)
set.seed(1)
library(tidyverse)
library(momentuHMM)
library(lubridate)
library(tictoc)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
dat.prep<-  dat.prep[dat.prep$dt == 300,]
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
# Step length mean
stepMean0 <- c(0.25, 25)
# Step length standard deviation
stepSD0 <- c(0.1, 25)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
# optMethod = "Nelder-Mead",
retryFits = 30)
toc()
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
toc()
1327/60
mod.res2
plot(mod.res2)
stateNames <- c("Burrow","Foraging", "Transit")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0, 0)        #for zero distances by state
# Step length mean
stepMean0 <- c(0.25, 5, 25)
# Step length standard deviation
stepSD0 <- c(0.1, 5, 25)
# Turning angle mean
angleMean0 <- c(pi, pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.2, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 3,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 30)
toc()
4441/60
mod.res2
plot(mod.res2)
states<- viterbi(mod.res2)
stateProbs(mod.res2)
set.seed(1)
library(tidyverse)
library(momentuHMM)
library(lubridate)
library(tictoc)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
dat.prep<-  dat.prep[dat.prep$dt == 300,]
#run HMM
## K = 2
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
stepMean0 <- c(0.25, 25)
# Step length standard deviation
stepSD0 <- c(0.1, 25)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 5)
toc()
265/60
mod.res2
plot(mod.res2)
set.seed(1)
library(tidyverse)
library(momentuHMM)
library(lubridate)
library(tictoc)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
dat.prep<-  dat.prep[dat.prep$dt == 300,]
#run HMM
## K = 2
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
stepShape0<- c(1, 1)
# Step length scale
stepScale0<- c(0.5, 10)
# Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
stepPar0 <- c(stepShape0, stepScale0, zeromass0)
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "weibull", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 5)
toc()
mod.res2
plot(mod.res2)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "weibull", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
# optMethod = "Nelder-Mead",
retryFits = 5)
toc()
mod.res2
plot(mod.res2)
dist <- list(step = "weibull", angle = "wrpcauchy")
shape <- c(1, 1, 1)    # step shape (two parameters: one for each state)
scale <- c(0.5, 10, 10)  # step scale
zeromass0 <- c(0.1, 0.001, 0.001) # step zero-mass (needed to account for zero step lengths) #if I did not have zeros in my step length I would not need to set this parameter
angleMean0 <- c(0, pi, 0)  # angle mean
rho <- c(0.1, 0.2, 0.75)     # angle concentration
Par0_m1 <- list(step=c(shape, scale, zeromass0), angle=c(angleMean0, rho)) #it I do not have step lengths equal to zero, and do not set zeromass0, I have to exclude the zeromass0 object from the "step" parameter here
stateNames <- c("burrow", "feeding","moving")
m1 <- fitHMM(data = tm.data,
nbStates = 3,
dist = dist,
Par0 = Par0_m1,
estAngleMean = list(angle=TRUE),
stateNames = stateNames)
m1 <- fitHMM(data = dat.prep,
nbStates = 3,
dist = dist,
Par0 = Par0_m1,
estAngleMean = list(angle=TRUE),
stateNames = stateNames)
m1
plot(m1)
install.packages("momentuHMM")
install.packages("momentuHMM")
install.packages("momentuHMM")
install.packages("momentuHMM")
set.seed(1)
library(tidyverse)
library(momentuHMM)
library(lubridate)
library(tictoc)
setwd("~/Documents/Snail Kite Project/Data/armadillos")
dat<- read.csv("Modified Armadillo Data.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
#add noise to burrow locs
tmp<- which(dat$InBurrow == 1)
dat$x[tmp]<- dat$x[tmp] + runif(length(tmp), -0.5,0.5)
dat$y[tmp]<- dat$y[tmp] + runif(length(tmp), -0.5,0.5)
#prep data for use by `momentuHMM`
dat<- dat %>% rename(ID = id)
dat.prep<- prepData(dat, type = "UTM", coordNames = c("x", "y"))
View(dat.prep)
dat.prep<-  dat.prep[dat.prep$dt == 300,]
stateNames <- c("Burrow","Active")
whichzero <- which(dat.prep$step == 0)
propzero <- length(whichzero)/nrow(dat.prep)
zeromass0 <- c(propzero, 0)        #for zero distances by state
# Step length mean
stepMean0 <- c(0.25, 25)
# Step length standard deviation
stepSD0 <- c(0.1, 25)
# # Step length shape
# stepShape0<- c(1, 1)
# # Step length scale
# stepScale0<- c(0.5, 10)
# # Turning angle mean
angleMean0 <- c(pi, 0)
# Turning angle concentration
angleCon0 <- c(0.8, 0.8)
# Fit model
if(propzero > 0) {  #don't include zero mass if no 0s present
stepPar0 <- c(stepMean0, stepSD0, zeromass0)
} else {
stepPar0 <- c(stepMean0, stepSD0)
}
anglePar0 <- c(angleMean0, angleCon0)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
# optMethod = "Nelder-Mead",
retryFits = 5)
toc()
mod.res2
plot(mod.res2)
tic()
mod.res2<- fitHMM(data = dat.prep, nbStates = 2,
Par0 = list(step = stepPar0, angle = anglePar0),
dist = list(step = "gamma", angle = "wrpcauchy"),
formula = ~ 1, stationary=TRUE, #stationary for a slightly better fit
estAngleMean = list(angle=TRUE),
stateNames = stateNames,
optMethod = "Nelder-Mead",
retryFits = 5)
toc()
mod.res2
plot(mod.res2)
