tmp=unique(path.S.scaled[,c('seg.id','dt')])
cond=!is.na(tmp$dt)
# ysoma=tmp[cond,'dt']
ysoma<- tmp %>%
tidyr::drop_na() %>%
dplyr::pull(dt)
ngibbs=5000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
tic()
mod.res.S=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1,w=w,MaxIter=MaxtIter)
toc()
382/60
store.llk=mod.res.S$llk
store.b=mod.res.S$b.gamma
store.betas=mod.res.S$betas
z.estim=mod.res.S$z.estim
#look at overall convergence
plot(store.llk,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
acf(store.llk[nburn:ngibbs])
plot(store.b,type='l')
plot(store.b[nburn:ngibbs],type='l')
acf(store.b[nburn:ngibbs])
#look at convergence betas
par(mfrow=c(2,2))
nbetas=ncol(mod.res.S$betas)
for (i in 1:nbetas){
plot(mod.res.S$betas[,i],type='l')
}
for (i in 1:nbetas){
plot(mod.res.S$betas[nburn:ngibbs,i],type='l')
}
#look at betas
ngroup=2
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=matrix(store.betas[ngibbs,],ncol(store.betas)/ngroup,ngroup)
#convert to data frame
store.betas.df<- data.frame(rbind(store.betas[(nburn+1):ngibbs, 1:4],
store.betas[(nburn+1):ngibbs, 5:8]),
group = factor(rep(1:2, each = 2500)))
names(store.betas.df)[2:4]<- colnames(xmat)[2:4]
names(store.betas.df)[1]<- "int"
store.betas.long<- pivot_longer(store.betas.df, -group, names_to = "betas")
store.betas.long$betas<- factor(store.betas.long$betas, levels = names(store.betas.df)[1:4])
ggplot(store.betas.long, aes(x=betas, y=value)) +
geom_boxplot(aes(fill=group)) +
theme_bw()
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(fill=group)) +
theme_bw()
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
theme_bw()
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer(palette = "dark2") +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
?scale_color_brewer
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer(type = "qual", palette = "dark2") +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer(palette = "Dark2") +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
plot(covars.N)
tic()
path.N<- extract.covars(dat.N, covars.N)
toc()
path.N$lunar<- lunar.illumination(path.N$date, shift = 12)
PerformanceAnalytics::chart.Correlation(path.N.scaled[,c(2:4,8)])  #no strong corrs
PerformanceAnalytics::chart.Correlation(path.N[,c(2:4,8)])  #no strong corrs
set.seed(1)
#analyze sites separately
path.N.scaled<- path.N %>%
mutate_at(c("dist2rd","ndvi","lunar"), ~scale(., center = TRUE, scale = TRUE))
ind=grep(paste(c("dist2rd","ndvi","lunar"), collapse="|"), names(path.N.scaled))
xmat=data.matrix(cbind(1,path.N.scaled[,ind]))
ngroup=2
#check seg.id
seg.id=path.N.scaled$seg.id
k=unique(seg.id)
unique(k-c(1:max(k)))
#get y soma
tmp=unique(path.N.scaled[,c('seg.id','dt')])
cond=!is.na(tmp$dt)
# ysoma=tmp[cond,'dt']
ysoma<- tmp %>%
tidyr::drop_na() %>%
dplyr::pull(dt)
ngibbs=5000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
tic()
mod.res.N=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1,w=w,MaxIter=MaxtIter)
toc()
1115/60
store.llk=mod.res.N$llk
store.b=mod.res.N$b.gamma
store.betas=mod.res.N$betas
z.estim=mod.res.N$z.estim
#look at overall convergence
plot(store.llk,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
acf(store.llk[nburn:ngibbs])
plot(store.b,type='l')
plot(store.b[nburn:ngibbs],type='l')
acf(store.b[nburn:ngibbs])
#look at convergence betas
par(mfrow=c(2,2))
nbetas=ncol(mod.res.N$betas)
for (i in 1:nbetas){
plot(mod.res.N$betas[,i],type='l')
}
for (i in 1:nbetas){
plot(mod.res.N$betas[nburn:ngibbs,i],type='l')
}
#look at betas
ngroup=2
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=matrix(store.betas[ngibbs,],ncol(store.betas)/ngroup,ngroup)
#convert to data frame
store.betas.df<- data.frame(rbind(store.betas[(nburn+1):ngibbs, 1:4],
store.betas[(nburn+1):ngibbs, 5:8]),
group = factor(rep(1:2, each = 2500)))
names(store.betas.df)[2:4]<- colnames(xmat)[2:4]
names(store.betas.df)[1]<- "int"
store.betas.long<- pivot_longer(store.betas.df, -group, names_to = "betas")
store.betas.long$betas<- factor(store.betas.long$betas, levels = names(store.betas.df)[1:4])
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
# write.csv(resist.dat, "Armadillo Resistance Data.csv", row.names = F)
write.csv(path.N, "N Armadillo Resistance Data.csv", row.names = F)
write.csv(path.S, "S Armadillo Resistance Data.csv", row.names = F)
library(Rcpp)
library(mvtnorm)
library(tictoc)
set.seed(1)
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
# dat<- read.csv('Armadillo Resistance Data.csv', as.is=T)
path.N<- read.csv('N Armadillo Resistance Data.csv', as.is=T)
path.S<- read.csv('S Armadillo Resistance Data.csv', as.is=T)
#analyze sites separately
path.N.scaled<- path.N %>%
mutate_at(c("dist2rd","ndvi","lunar"), ~scale(., center = TRUE, scale = TRUE))
path.S.scaled<- path.S %>%
mutate_at(c("dist2rd","ndvi","lunar"), ~scale(., center = TRUE, scale = TRUE))
library(dplyr)
#analyze sites separately
path.N.scaled<- path.N %>%
mutate_at(c("dist2rd","ndvi","lunar"), ~scale(., center = TRUE, scale = TRUE))
path.S.scaled<- path.S %>%
mutate_at(c("dist2rd","ndvi","lunar"), ~scale(., center = TRUE, scale = TRUE))
ind=grep(paste(c("dist2rd","ndvi","lunar"), collapse="|"), names(path.N.scaled))
xmat=data.matrix(cbind(1, path.N.scaled[,ind]))
#check seg.id
seg.id=path.N.scaled$seg.id
k=unique(seg.id)
unique(k-c(1:max(k)))
#get y soma
tmp=unique(path.N.scaled[,c('seg.id','dt')])
ysoma<- tmp %>%
tidyr::drop_na() %>%
dplyr::pull(dt)
#model args
ngibbs=5000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
#2-state model
ngroup=2
tic()
res.N_2states<- gibbs_resist(ysoma = ysoma, xmat = xmat, seg.id = seg.id, ngroup = ngroup,
ngibbs = ngibbs, nburn = nburn, var.betas = var.betas,
gamma1 = gamma1, w = w, MaxIter = MaxtIter)
toc()
1151/60
#3-state model
ngroup=3
tic()
res.N_3states<- gibbs_resist(ysoma = ysoma, xmat = xmat, seg.id = seg.id, ngroup = ngroup,
ngibbs = ngibbs, nburn = nburn, var.betas = var.betas,
gamma1 = gamma1, w = w, MaxIter = MaxtIter)
toc()
1498/60
ind=grep(paste(c("dist2rd","ndvi","lunar"), collapse="|"), names(path.S.scaled))
xmat=data.matrix(cbind(1, path.S.scaled[,ind]))
#check seg.id
seg.id=path.S.scaled$seg.id
k=unique(seg.id)
unique(k-c(1:max(k)))
#get y soma
tmp=unique(path.S.scaled[,c('seg.id','dt')])
ysoma<- tmp %>%
tidyr::drop_na() %>%
dplyr::pull(dt)
#model args
ngibbs=5000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(1,ncol(xmat)-1))
#2-state model
ngroup=2
tic()
res.S_2states<- gibbs_resist(ysoma = ysoma, xmat = xmat, seg.id = seg.id, ngroup = ngroup,
ngibbs = ngibbs, nburn = nburn, var.betas = var.betas,
gamma1 = gamma1, w = w, MaxIter = MaxtIter)
toc()
410/60
#3-state model
ngroup=3
tic()
res.S_3states<- gibbs_resist(ysoma = ysoma, xmat = xmat, seg.id = seg.id, ngroup = ngroup,
ngibbs = ngibbs, nburn = nburn, var.betas = var.betas,
gamma1 = gamma1, w = w, MaxIter = MaxtIter)
toc()
515/60
store.llk_N2=res.N_2states$llk
store.b_N2=res.N_2states$b.gamma
store.betas_N2=res.N_2states$betas
z.estim_N2=res.N_2states$z.estim
#look at overall convergence
plot(store.llk_N2,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk_N2[nburn:ngibbs],type='l')
acf(store.llk_N2[nburn:ngibbs])
plot(store.b_N2,type='l')
plot(store.b_N2[nburn:ngibbs],type='l')
acf(store.b_N2[nburn:ngibbs])
nbetas_N2=ncol(res.N_2states$betas)
for (i in 1:nbetas_N2){
plot(res.N_2states$betas[,i],type='l')
}
#look at convergence betas
par(mfrow=c(2,2))
nbetas_N2=ncol(res.N_2states$betas)
for (i in 1:nbetas_N2){
plot(res.N_2states$betas[,i],type='l')
}
for (i in 1:nbetas_N2){
plot(res.N_2states$betas[nburn:ngibbs,i],type='l')
}
par(mfrow=c(1,1),mar=rep(3,4))
#look at betas (convert to data frame)
store.betas_N2.df<- data.frame(rbind(store.betas_N2[(nburn+1):ngibbs, 1:4],
store.betas_N2[(nburn+1):ngibbs, 5:8]),
group = factor(rep(1:2, each = 2500)))
names(store.betas_N2.df)[2:4]<- c("dist2rd","ndvi","lunar")
names(store.betas_N2.df)[1]<- "int"
store.betas.long_N2<- pivot_longer(store.betas_N2.df, -group, names_to = "betas")
store.betas.long_N2<- tidyr::pivot_longer(store.betas_N2.df, -group, names_to = "betas")
store.betas.long_N2$betas<- factor(store.betas.long_N2$betas,
levels = names(store.betas_N2.df)[1:4])
ggplot(store.betas.long_N2 %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal (2 states)") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
library(ggplot2)
ggplot(store.betas.long_N2 %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal (2 states)") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
store.llk_N3=res.N_3states$llk
store.b_N3=res.N_3states$b.gamma
store.betas_N3=res.N_3states$betas
z.estim_N3=res.N_3states$z.estim
#look at overall convergence
plot(store.llk_N3,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk_N3[nburn:ngibbs],type='l')
acf(store.llk_N3[nburn:ngibbs])
plot(store.b_N3,type='l')
plot(store.b_N3[nburn:ngibbs],type='l')
acf(store.b_N3[nburn:ngibbs])
#look at convergence betas
par(mfrow=c(2,2))
nbetas_N3=ncol(res.N_3states$betas)
for (i in 1:nbetas_N3){
plot(res.N_3states$betas[,i],type='l')
}
for (i in 1:nbetas_N3){
plot(res.N_3states$betas[nburn:ngibbs,i],type='l')
}
par(mfrow=c(1,1),mar=rep(3,4))
View(store.betas_N3)
#look at betas (convert to data frame)
store.betas_N3.df<- data.frame(rbind(store.betas_N3[(nburn+1):ngibbs, 1:4],
store.betas_N3[(nburn+1):ngibbs, 5:8],
store.betas_N3[(nburn+1):ngibbs, 9:12]),
group = factor(rep(1:3, each = 2500)))
View(store.betas_N2.df)
names(store.betas_N3.df)[2:4]<- c("dist2rd","ndvi","lunar")
names(store.betas_N3.df)[1]<- "int"
store.betas.long_N3<- tidyr::pivot_longer(store.betas_N3.df, -group, names_to = "betas")
store.betas.long_N3$betas<- factor(store.betas.long_N3$betas,
levels = names(store.betas_N3.df)[1:4])
ggplot(store.betas.long_N3 %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal (3 states)") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
store.llk_S2=res.S_2states$llk
store.b_S2=res.S_2states$b.gamma
store.betas_S2=res.S_2states$betas
z.estim_S2=res.S_2states$z.estim
#look at overall convergence
plot(store.llk_S2,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk_S2[nburn:ngibbs],type='l')
acf(store.llk_S2[nburn:ngibbs])
plot(store.b_S2,type='l')
plot(store.b_S2[nburn:ngibbs],type='l')
acf(store.b_S2[nburn:ngibbs])
#look at convergence betas
par(mfrow=c(2,2))
nbetas_S2=ncol(res.S_2states$betas)
for (i in 1:nbetas_S2){
plot(res.S_2states$betas[,i],type='l')
}
for (i in 1:nbetas_S2){
plot(res.S_2states$betas[nburn:ngibbs,i],type='l')
}
par(mfrow=c(1,1),mar=rep(3,4))
#look at betas (convert to data frame)
store.betas_S2.df<- data.frame(rbind(store.betas_S2[(nburn+1):ngibbs, 1:4],
store.betas_S2[(nburn+1):ngibbs, 5:8]),
group = factor(rep(1:2, each = 2500)))
names(store.betas_S2.df)[2:4]<- c("dist2rd","ndvi","lunar")
names(store.betas_S2.df)[1]<- "int"
store.betas.long_S2<- tidyr::pivot_longer(store.betas_S2.df, -group, names_to = "betas")
store.betas.long_S2$betas<- factor(store.betas.long_S2$betas,
levels = names(store.betas_S2.df)[1:4])
ggplot(store.betas.long_S2 %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal (2 states)") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
store.llk_S3=res.S_3states$llk
store.b_S3=res.S_3states$b.gamma
store.betas_S3=res.S_3states$betas
z.estim_S3=res.S_3states$z.estim
#look at overall convergence
plot(store.llk_S3,type='l')
nburn=2500
par(mfrow=c(1,1),mar=rep(3,4))
store.llk_S3=res.S_3states$llk
store.b_S3=res.S_3states$b.gamma
store.betas_S3=res.S_3states$betas
z.estim_S3=res.S_3states$z.estim
#look at overall convergence
plot(store.llk_S3,type='l')
par(mfrow=c(1,1),mar=rep(3,4))
#look at overall convergence
plot(store.llk_S3,type='l')
nburn=2500
abline(v=nburn,col='red')
plot(store.llk_S3[nburn:ngibbs],type='l')
acf(store.llk_S3[nburn:ngibbs])
plot(store.b_S3,type='l')
plot(store.b_S3[nburn:ngibbs],type='l')
acf(store.b_S3[nburn:ngibbs])
#look at convergence betas
par(mfrow=c(2,2))
nbetas_S3=ncol(res.S_3states$betas)
for (i in 1:nbetas_S3){
plot(res.S_3states$betas[,i],type='l')
}
for (i in 1:nbetas_S3){
plot(res.S_3states$betas[nburn:ngibbs,i],type='l')
}
par(mfrow=c(1,1),mar=rep(3,4))
#look at betas (convert to data frame)
store.betas_S3.df<- data.frame(rbind(store.betas_S3[(nburn+1):ngibbs, 1:4],
store.betas_S3[(nburn+1):ngibbs, 5:8],
store.betas_S3[(nburn+1):ngibbs, 9:12]),
group = factor(rep(1:3, each = 2500)))
names(store.betas_S3.df)[2:4]<- c("dist2rd","ndvi","lunar")
names(store.betas_S3.df)[1]<- "int"
store.betas.long_S3<- tidyr::pivot_longer(store.betas_S3.df, -group, names_to = "betas")
store.betas.long_S3$betas<- factor(store.betas.long_S3$betas,
levels = names(store.betas_S3.df)[1:4])
ggplot(store.betas.long_S3 %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(aes(color=group)) +
scale_color_brewer("Behavior", palette = "Dark2") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal (3 states)") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
View(path.S)
library('Rcpp')
library('mvtnorm')
set.seed(61)
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat<- read.csv("S Armadillo Resistance Data.csv")
View(dat)
ind<- c(2,3,4,8)
xmat=data.matrix(cbind(1,dat[,ind]))
View(xmat)
seg.id=dat$seg.id
ngroup=4
tmp=unique(dat[,c('seg.id','dt')])
cond=!is.na(tmp$dt)
ysoma=tmp[cond,'dt']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,ngroup=ngroup,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1,w=w,MaxIter=MaxtIter)
View(dat)
