modify_at('dt', .*60) %>%
# dplyr::select(date) %>%
# seconds() %>%
# diff() %>%
# c(NA,.) %>%
ungroup()
foo<- dat.N %>%
group_by(id) %>%
mutate(dt = difftime(date, lag(date), units = "sec")) %>%
# modify_at('dt', .*60) %>%
# dplyr::select(date) %>%
# seconds() %>%
# diff() %>%
# c(NA,.) %>%
ungroup()
str(foo)
foo %>% group_by(id) %>% slice(n=1:5)
dat.N<- dat.N %>%
group_by(id) %>%
mutate(dt = difftime(date, lag(date), units = "sec")) %>%
ungroup()
dat.S$cell<- cellFromXY(dist2rdS_30m, dat.S[,c("x","y")])
dat.S<- dat.S %>%
group_by(id) %>%
mutate(dt = difftime(date, lag(date), units = "sec")) %>%
ungroup()
View(dat.S)
View(path_N_df)
ind_N<- vector()
for (i in 2:(nrow(path_N_df) - 1)) {
if (path_N_df$cell[i] == path_N_df$cell[i+1])
ind_N<- c(ind_N, i)
}
ind_N
df.to.list = function(dat, ind) {  #ind must be in quotes
id<- unique(dat[,ind])
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
tmp<- which(dat[,ind] == id[i])
dat.list[[i]]<- dat[tmp,]
}
dat.list
}
match_time = function(dat, id) {  #matches covariate time series with track observations
dat.list<- df.to.list(dat, id)
for (j in 1:length(dat.list)) {
ind<- vector()
for (i in 2:(nrow(dat.list[[j]]) - 1)) {
if (dat.list[[j]]$cell[i] == dat.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(dat.list[[j]]))
dat.list[[j]]$time1<- ind
}
dat1<- bind_rows(dat.list, .id="id")
dat1
}
foo<- match_time(dat = path_N_df, id = "id")
dat<- path_N_df
id<- "id"
dat.list<- df.to.list(dat, id)
dat.list<- df.to.list(dat = dat, ind = id)
unique(dat[,ind])
ind = id
unique(dat[,ind])
id<- unique(dat[,ind])
id
n=length(id)
unique(dat[,ind]) %>% as.vector()
id<- unique(dat[,ind]) %>% as.vector()
id<- unique(dat[,ind]) %>% vector()
id<- unique(dat[,ind]) %>% unlist()
id<- unique(dat[,ind]) %>% as.vector()
class(id)
unique(dat[,ind])
id<- unique(dat[,ind]) %>% pull()
id<- unique(dat[,ind]) %>% dplyr::pull()
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
View(dat.list)
for (i in 1:length(id)) {
tmp<- which(dat[,ind] == id[i])
dat.list[[i]]<- dat[tmp,]
}
dat.list
df.to.list = function(dat, ind) {  #ind must be in quotes
id<- unique(dat[,ind]) %>% dplyr::pull()
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
tmp<- which(dat[,ind] == id[i])
dat.list[[i]]<- dat[tmp,]
}
dat.list
}
foo<- match_time(dat = path_N_df, id = "id")
id="id"
dat.list<- df.to.list(dat = dat, ind = id)
View(dat.list)
for (j in 1:length(dat.list)) {
ind<- vector()
for (i in 2:(nrow(dat.list[[j]]) - 1)) {
if (dat.list[[j]]$cell[i] == dat.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(dat.list[[j]]))
dat.list[[j]]$time1<- ind
}
j=1
ind<- vector()
for (i in 2:(nrow(dat.list[[j]]) - 1)) {
if (dat.list[[j]]$cell[i] == dat.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(dat.list[[j]]))
dat.list[[j]]$time1<- ind
track_df<- dat.N
path_df<- path_N_df
dat.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
View(track.list)
View(dat.list)
match_time = function(path_df, track_df, id) {  #matches covariate time series with track observations
path.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
for (j in 1:length(path.list)) {
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
track.list[[j]]$time1<- ind
}
track_df1<- bind_rows(track.list, .id="id")
track_df1
}
foo<- match_time(dat = path_N_df, id = "id")
foo<- match_time(path_df = path_N_df, track_df = dat.N, id = "id")
id
track_df<- dat.N
path.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
for (j in 1:length(path.list)) {
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
track.list[[j]]$time1<- ind
}
j=1
length(path.list)
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
View(track.list)
View(path.list)
track.list[[j]]$time1<- ind
View(track.list)
View(track.list[["tm14"]])
j=2
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind
View(path.list)
View(path.list[["2"]])
View(track.list[["tm15"]])
tail(ind)
ind<- c(1, ind, nrow(path.list[[j]]))
ind
j=3
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
View(track.list)
j=4
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
summary(path.list[[2]])
summary(path.list[[4]])
summary(track.list[[2]])
dat<- read.csv("three_banded_over20_for_Josh.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as.POSIXct(strptime(dat$date, format = "%d/%m/%Y %H:%M"))
dat %>% group_by(id) %>% tally()
foo<- diff(path.list[[2]]$cell)
foo
j=2
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
ind
foo
which(foo == 0)
which(foo == 0) %>% tail()
tail(ind)
# for (i in 2:(nrow(path.list[[j]]) - 1)) {
#   if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
#     ind<- c(ind, i)
# }
foo<- diff(path.list[[j]]$cell) %>% which(. == 0)
# for (i in 2:(nrow(path.list[[j]]) - 1)) {
#   if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
#     ind<- c(ind, i)
# }
foo<- which(diff(path.list[[j]]$cell) == 0)
ind1<- c(foo, nrow(path.list[[j]]))
identical(ind,ind1)
ind<- vector()
j
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
identical(ind,ind1)
ind
ind1
which(ind != ind1)
which(ind == ind1)
identical(ind, as.numeric(ind1))
nrow(track.list$tm15)
ind1[2100:2128]
View(path.list)
View(path.list[["2"]])
match_time = function(path_df, track_df, id) {  #matches covariate time series with track observations
path.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
for (j in 1:length(path.list)) {
ind<- vector()
# for (i in 2:(nrow(path.list[[j]]) - 1)) {
#   if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
#     ind<- c(ind, i)
# }
foo<- which(diff(path.list[[j]]$cell) == 0)
ind<- c(foo, nrow(path.list[[j]]))
# ind<- c(1, ind, nrow(path.list[[j]]))
track.list[[j]]$time1<- ind
}
track_df1<- bind_rows(track.list, .id="id")
track_df1
}
foo<- match_time(path_df = path_N_df, track_df = dat.N, id = "id")
View(track.list)
j=1
path.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
ind<- vector()
# for (i in 2:(nrow(path.list[[j]]) - 1)) {
#   if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
#     ind<- c(ind, i)
# }
foo<- which(diff(path.list[[j]]$cell) == 0)
View(track.list)
View(track.list[["tm14"]])
View(path.list)
View(path.list[["1"]])
ind<- c(foo, nrow(path.list[[j]]))
ind<- c(1, foo, nrow(path.list[[j]]))
j=2
ind<- vector()
# for (i in 2:(nrow(path.list[[j]]) - 1)) {
#   if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
#     ind<- c(ind, i)
# }
foo<- which(diff(path.list[[j]]$cell) == 0)
ind<- c(1, foo, nrow(path.list[[j]]))
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
j=4
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
View(track.list[["tm30"]])
View(path.list[["4"]])
ind
?`extract,Raster,data.frame-method`
foo<- raster::extract(dist2rdN_30m, dat.N_sf, along = TRUE, cellnumbers = TRUE, df = TRUE)
View(foo)
names(path_N_df)
names(foo)
names(foo)[2:3]<- c("cell","dist2rd")
names(foo)
diff(foo[foo$ID==1,"cell"])
foo1<- which(diff(foo[foo$ID==1,"cell"]) == 0)
foo1<- which(diff(foo[foo$ID==2,"cell"]) == 0)
j=4
ind<- vector()
(nrow(path.list[[j]]) - 1)
nrow(path.list[[j]])
ind<- vector()
for (i in 2:nrow(path.list[[j]])) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i-1])
ind<- c(ind, (i-1))
}
last(ind)
nrow(path.list[[j]])
ind<- c(ind, nrow(path.list[[j]]))
nrow(track.list[[j]])
#N
dat.N_sp<- as(dat.N_sf, "Spatial")
proj4string(dat.N_sp)
proj4string(dist2rdN_30m)
proj4string(dist2rdN_30m) == proj4string(dat.N_sp)
crs(dat.N_sp)
crs(dat.N_sp)<- crs(dist2rdN_30m)
crs(dat.N_sp)
identical(crs(dat.N_sp), crs(dist2rdN_30m))
View(dat.N_sp)
path_N<- raster::extract(dist2rdN_30m, dat.N_sp, along = TRUE, cellnumbers = TRUE)
View(path_N)
unique(dat.N$id)
names(path_N)<- unique(dat.N$id)
View(path_N)
path_N_df = purrr::map_dfr(path_N, as_data_frame, .id = "id")
View(path_N_df)
names(path_N_df)[3]<- "dist2rd"
path_N_coords = xyFromCell(dist2rdN_30m, path_N_df$cell)
#double-check that extracted grid cells overlap with tm14 path
bar<- dist2rdN_30m
bar[]<- NA
bar[path_N_df$cell]<- dist2rdN_30m[path_N_df$cell]
plot(bar)
plot(st_geometry(dat.N_sf), add=T)
#Label all observations with cell number and time interval
dat.N$cell<- cellFromXY(dist2rdN_30m, dat.N[,c("x","y")])
cellFromXY(dist2rdN_30m, dat.N[,c("x","y")])
View(dat.N)
str(dat.N)
class(dist2rdN_30m)
dat.N[,c("x","y")]
dat<- read.csv("three_banded_over20_for_Josh.csv", header = T, sep = ",")
dat$id<- as.character(dat$id)
dat$date<- as.POSIXct(strptime(dat$date, format = "%d/%m/%Y %H:%M"))
coords<- dat[c("x","y")]
dat.spdf<- SpatialPointsDataFrame(coords = coords, data = dat)
proj4string(dat.spdf)<- CRS("+init=epsg:32721")
proj4string(dat.spdf)
dat.N<- dat[dat$y > 8100000,]
dat.S<- dat[dat$y < 8100000,]
### Read in rasters
setwd("~/Documents/Snail Kite Project/Data/armadillos/Environ Data")
rast<- dir(getwd(), "*.tif$")
for (i in rast) assign(i, raster(i))
EucDist_cerc_Copy.tif
#Need to project rasters same as tracks
EucDist_cerc_Copy.tif<- projectRaster(EucDist_cerc_Copy.tif, crs = "+init=epsg:32721")
EucDist_cerc_Copy.tif
crs(EucDist_cercaAm.tif)
crs(EucDist_cercaAm.tif)<- crs(EucDist_cerc_Copy.tif)
crs(EucDist_cercaAm.tif)
dat.N<- subset(dat.spdf, dat.spdf$y > 8100000)
dat.S<- subset(dat.spdf, dat.spdf$y < 8100000)
View(dat.N)
plot(dat.N)
plot(dat.S)
crs(dat.N)
dat.N_sf<- st_as_sf(dat.N)
View(dat.N_sf)
dat.N_sf<- st_sf(dat.N)
dat.N_sf<- st_as_sf(dat.N)
crs(dat.N_sf)
# Convert DFs to linestrings by ID
dat.N_sf<- st_as_sf(dat.N) %>%
group_by(id) %>%
summarize(do_union = FALSE) %>%
st_cast("LINESTRING")
View(dat.N_sf)
plot(dat.N_sf)
projectExtent(dat.N_sf)
projection(dat.N_sf)
# Convert DFs to linestrings by ID
dat.N_sf<- st_as_sf(dat.N) %>%
group_by(id) %>%
summarize(do_union = FALSE) %>%
st_cast("LINESTRING") %>%
as_Spatial()
plot(dat.N_sf)
projection(dat.N_sf)
foo<- as.SpatialLines.SLDF(dat.N)
dat.N$id
#Convert to Spatial Lines Data Frame
x <- lapply(split(dat.N, dat.N$id), function(x) Lines(list(Line(coordinates(x))), dat.N$id[1L]))
View(x)
# the corrected part goes here:
lines <- SpatialLines(x)
x$tm14
#Convert to Spatial Lines Data Frame
x <- lapply(split(dat.N, dat.N$id), function(x) Lines(list(Line(coordinates(x))), x$id[1L]))
# the corrected part goes here:
lines <- SpatialLines(x)
data <- data.frame(id = unique(dat.N$id))
rownames(data) <- data$id
l <- SpatialLinesDataFrame(lines, data)
plot(l)
crs(l)
crs(l)<- CRS("+init=epsg:32721")
crs(l)
dat.N_sldf <- SpatialLinesDataFrame(lines, data)
crs(dat.N_sldf)<- CRS("+init=epsg:32721")
## Aggregate spatial data to same scale (which will likely be 30m)
res(EucDist_cerc_Copy.tif) #13m 13m
dist2rdN_30m<- raster::aggregate(EucDist_cerc_Copy.tif,
fact = 2,
fun = mean)
#N
# dat.N_sp<- as(dat.N_sf, "Spatial")
# crs(dat.N_sp)<- crs(dist2rdN_30m)
path_N<- raster::extract(dist2rdN_30m, dat.N_sldf, along = TRUE, cellnumbers = TRUE)
names(path_N)
View(lines)
View(path_N)
unique(dat.N$id)
dat.N$id
names(path_N)<- unique(dat.N$id)
path_N_df = purrr::map_dfr(path_N, as_data_frame, .id = "id")
names(path_N_df)[3]<- "dist2rd"
View(path_N_df)
path_N_coords = xyFromCell(dist2rdN_30m, path_N_df$cell)
#double-check that extracted grid cells overlap with tm14 path
bar<- dist2rdN_30m
bar[]<- NA
bar[path_N_df$cell]<- dist2rdN_30m[path_N_df$cell]
plot(bar)
# plot(st_geometry(dat.N_sf), add=T)
plot(dat.N_sldf, add=T)
#Label all observations with cell number and time interval
dat.N$cell<- cellFromXY(dist2rdN_30m, dat.N[,c("x","y")])
View(dat.N)
dat.N@data<- dat.N@data %>%
group_by(id) %>%
mutate(dt = difftime(date, lag(date), units = "sec")) %>%
ungroup()
View(dat.N)
j=1
path_df<- path_N_df
track_df<- dat.N@data
id
id="id"
path.list<- df.to.list(dat = path_df, ind = id)
df.to.list = function(dat, ind) {  #ind must be in quotes
id<- unique(dat[,ind]) %>% dplyr::pull()
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
tmp<- which(dat[,ind] == id[i])
dat.list[[i]]<- dat[tmp,]
}
dat.list
}
path.list<- df.to.list(dat = path_df, ind = id)
track.list<- df.to.list(dat = track_df, ind = id)
ind<- vector()
for (i in 2:nrow(path.list[[j]])) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i-1])
ind<- c(ind, (i-1))
}
ind<- c(1, ind, nrow(path.list[[j]]))
track.list[[j]]$time1<- ind
j=2
ind<- vector()
for (i in 2:nrow(path.list[[j]])) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i-1])
ind<- c(ind, (i-1))
}
View(track.list)
j=1
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
j=2
ind<- vector()
for (i in 2:(nrow(path.list[[j]]) - 1)) {
if (path.list[[j]]$cell[i] == path.list[[j]]$cell[i+1])
ind<- c(ind, i)
}
ind<- c(1, ind, nrow(path.list[[j]]))
View(path.list)
View(path.list[["tm30"]])
View(path.list[["tm30"]])
