dat$id<- as.character(dat$id)
dat$date<- as_datetime(dat$date)
# Separate tracks by region (N or S)
dat.N<- dat %>% filter(region == "N")
dat.S<- dat %>% filter(region == "S")
setwd("~/Documents/Snail Kite Project/Data/armadillos/Environ Data")
rast<- dir(getwd(), "*.tif$")
for (i in rast) assign(i, raster(i))
#Need to project rasters same as tracks
EucDist_cerc_Copy.tif<- projectRaster(EucDist_cerc_Copy.tif, crs = "+init=epsg:32721")
crs(EucDist_cercaAm.tif)<- crs(EucDist_cerc_Copy.tif)
## Aggregate spatial data to same scale (which will likely be 30m)
res(EucDist_cercaAm.tif) #1m 1m
dist2rdS_30m<- raster::aggregate(EucDist_cercaAm.tif,
fact = 30,
fun = mean)
res(EucDist_cerc_Copy.tif) #13m 13m
#create dummy raster at same extent and proj, but with desired resolution
ex.ras<- raster(ext = extent(EucDist_cerc_Copy.tif), crs = "+init=epsg:32721", res = 30)
dist2rdN_30m<- resample(EucDist_cerc_Copy.tif, ex.ras, method = "bilinear")
#North
rast.N<- raster(ext=extent(c(min(dat.N$x) - 30, max(dat.N$x) + 30, min(dat.N$y) - 30,
max(dat.N$y + 30))),
crs = "+init=epsg:32721",
res = 30)
values(rast.N)<- 0
dist2rdN_30m<- crop(dist2rdN_30m, rast.N)
plot(dist2rdN_30m); points(dat.N$x, dat.N$y)
#South
rast.S<- raster(ext=extent(c(min(dat.S$x) - 30, max(dat.S$x) + 30, min(dat.S$y) - 30,
max(dat.S$y + 30))),
crs = "+init=epsg:32721",
res = 30)
values(rast.S)<- 0
dist2rdS_30m<- crop(dist2rdS_30m, rast.S)
plot(dist2rdS_30m); points(dat.S$x, dat.S$y)
#resample DEMs to 30m from 18m; they will now share the same dimensions and extent
dem.N<- resample(dem_N.tif, dist2rdN_30m, method = "bilinear")
compareRaster(dist2rdN_30m, dem.N)  #check if same extent, dimensions, projection, resolution,
#and origin
plot(dem.N); points(dat.N$x, dat.N$y)
#resample DEMs to 30m from 18m; they will now share the same dimensions and extent
dem.S<- resample(dem_S.tif, dist2rdS_30m, method = "bilinear")
compareRaster(dist2rdS_30m, dem.S)
plot(dem.S); points(dat.S$x, dat.S$y)
setwd("~/Documents/Snail Kite Project/Data/armadillos/NDVI")
#load files
ndvi.filenames<- list.files(getwd(), pattern = "*.grd$")
ndvi.N<- brick(ndvi.filenames[1])
ndvi.S<- brick(ndvi.filenames[2])
#change extent and dimensions of RasterBricks using resample()
ndvi.N<- resample(ndvi.N, dist2rdN_30m, method = "bilinear")
compareRaster(dist2rdN_30m, ndvi.N)
plot(ndvi.N[[1]]); points(dat.N$x, dat.N$y)
#change extent and dimensions of RasterBricks using resample()
ndvi.S<- resample(ndvi.S, dist2rdS_30m, method = "bilinear")
compareRaster(dist2rdS_30m, ndvi.S)
plot(ndvi.S[[1]]); points(dat.S$x, dat.S$y)
### *TEMPORARY* take mean NDVI for all rasters over study period at each site
ndvi.N.mean<- mean(ndvi.N, na.rm = T)
ndvi.S.mean<- mean(ndvi.S, na.rm = T)
covars.N<- brick(dist2rdN_30m, dem.N, ndvi.N.mean)
names(covars.N)<- c("dist2rd", "elev", "ndvi")
covars.S<- brick(dist2rdS_30m, dem.S, ndvi.S.mean)
names(covars.S)<- c("dist2rd", "elev", "ndvi")
#Need to center and scale raster values so comparable to beta coeffs
### IMPROVE CODE SINCE COVARS.N IS GENERATED WITHIN ANOTHER SCRIPT
covars.N2<- covars.N[[c("dist2rd","ndvi")]]
covars.N2$dist2rd<- scale(covars.N2$dist2rd, center = T, scale = T)
covars.N2$ndvi<- scale(covars.N2$ndvi, center = T, scale = T)
scaled_lunar_N<- path.N$lunar %>%
scale(center = T, scale = T) %>%
as.data.frame() %>%
summarise(min=min(V1), mean=mean(V1), max=max(V1))
#New moon
resistSurfN_new<- exp(
betas_N["int"] +
betas_N["dist2rd"]*covars.N2$dist2rd +
betas_N["ndvi"]*covars.N2$ndvi +
betas_N["lunar"]*scaled_lunar_N$min  #for new moon
)
resistSurfN_new.df<- as.data.frame(resistSurfN_new, xy=T) %>%
mutate(phase = "New")
#Quarter moon
resistSurfN_quarter<- exp(
betas_N["int"] +
betas_N["dist2rd"]*covars.N2$dist2rd +
betas_N["ndvi"]*covars.N2$ndvi +
betas_N["lunar"]*scaled_lunar_N$mean  #for quarter moon
)
resistSurfN_quarter.df<- as.data.frame(resistSurfN_quarter, xy=T) %>%
mutate(phase = "Quarter")
#Full moon
resistSurfN_full<- exp(
betas_N["int"] +
betas_N["dist2rd"]*covars.N2$dist2rd +
betas_N["ndvi"]*covars.N2$ndvi +
betas_N["lunar"]*scaled_lunar_N$max  #for full moon
)
resistSurfN_full.df<- as.data.frame(resistSurfN_full, xy=T) %>%
mutate(phase = "Full")
#Combine all results together for each level of lunar illumination
resistSurfN.df<- rbind(resistSurfN_new.df, resistSurfN_quarter.df, resistSurfN_full.df)
resistSurfN.df$phase<- factor(resistSurfN.df$phase, levels = c("New", "Quarter", "Full"))
ggplot() +
geom_tile(data = resistSurfN.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.N, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "North Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
#extract beta coeffs (mean)
betas_S<- colMeans(store.betas_S.df)
#Need to center and scale raster values so comparable to beta coeffs
covars.S2<- covars.S[[c("dist2rd","ndvi")]]
covars.S2$dist2rd<- scale(covars.S2$dist2rd, center = T, scale = T)
covars.S2$ndvi<- scale(covars.S2$ndvi, center = T, scale = T)
dist_ndvi.rast<- covars.S2$dist2rd * covars.S2$ndvi
covars.S2<- stack(covars.S2, dist_ndvi.rast) %>% brick()
scaled_lunar_S<- path.S$lunar %>%
scale(center = T, scale = T) %>%
as.data.frame() %>%
summarise(min=min(V1), mean=mean(V1), max=max(V1))
#New moon
resistSurfS_new<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$min +  #for new moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_new.df<- as.data.frame(resistSurfS_new, xy=T) %>%
mutate(phase = "New")
#Quarter moon
resistSurfS_quarter<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$mean +  #for quarter moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_quarter.df<- as.data.frame(resistSurfS_quarter, xy=T) %>%
mutate(phase = "Quarter")
#Full moon
resistSurfS_full<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$max +  #for full moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_full.df<- as.data.frame(resistSurfS_full, xy=T) %>%
mutate(phase = "Full")
#Combine all results together for each level of lunar illumination
resistSurfS.df<- rbind(resistSurfS_new.df, resistSurfS_quarter.df, resistSurfS_full.df)
resistSurfS.df$phase<- factor(resistSurfS.df$phase, levels = c("New", "Quarter", "Full"))
ggplot() +
geom_tile(data = resistSurfS.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.S, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "South Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
setwd("~/Documents/Snail Kite Project/Data/armadillos/Environ Data")
### Read in shapefiles
shps <- dir(getwd(), "*.shp$")
for (shp in shps) assign(shp, sf::st_read(shp))
plot(classes_DL_padrao.shp[5])
plot(classes_STseca.shp[9])
#Or, you can run this code to store all .shp within a list
files<- list.files(pattern="shp$", full.names=TRUE)
x<- lapply(files, shapefile)
x2<- lapply(x, function(x) broom::tidy(x, region = "SPRCLASSE"))
ggplot() +
geom_polygon(data = x2[[1]], aes(x=long, y=lat, group = group, fill = id), colour = "black") +
geom_point(data = dat.N, aes(x, y), alpha = 0.25) +
coord_equal() +
theme_void()
ggplot() +
geom_polygon(data = x2[[2]], aes(x=long, y=lat, group = group, fill = id), colour = "black") +
geom_point(data = dat.S, aes(x, y), alpha = 0.25) +
coord_equal() +
theme_void()
plot(ndvi.S[[1]]); points(dat.S$x, dat.S$y)
foo<- covars.S2$ndvi[covars.S2$ndvi < 0,]
plot(foo)
foo<- covars.S2$ndvi[covars.S2$ndvi < 0]
foo<- values(covars.S2$ndvi)[values(covars.S2$ndvi) < 0]
#Need to center and scale raster values so comparable to beta coeffs
covars.S2<- covars.S[[c("dist2rd","ndvi")]]
plot(covars.S2)
values(covars.S2$ndvi)[values(covars.S2$ndvi) < 0]<- NA
plot(covars.S2)
covars.S2$dist2rd<- scale(covars.S2$dist2rd, center = T, scale = T)
covars.S2$ndvi<- scale(covars.S2$ndvi, center = T, scale = T)
dist_ndvi.rast<- covars.S2$dist2rd * covars.S2$ndvi
covars.S2<- stack(covars.S2, dist_ndvi.rast) %>% brick()
scaled_lunar_S<- path.S$lunar %>%
scale(center = T, scale = T) %>%
as.data.frame() %>%
summarise(min=min(V1), mean=mean(V1), max=max(V1))
#New moon
resistSurfS_new<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$min +  #for new moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_new.df<- as.data.frame(resistSurfS_new, xy=T) %>%
mutate(phase = "New")
#Quarter moon
resistSurfS_quarter<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$mean +  #for quarter moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_quarter.df<- as.data.frame(resistSurfS_quarter, xy=T) %>%
mutate(phase = "Quarter")
#Full moon
resistSurfS_full<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$max +  #for full moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_full.df<- as.data.frame(resistSurfS_full, xy=T) %>%
mutate(phase = "Full")
#Combine all results together for each level of lunar illumination
resistSurfS.df<- rbind(resistSurfS_new.df, resistSurfS_quarter.df, resistSurfS_full.df)
resistSurfS.df$phase<- factor(resistSurfS.df$phase, levels = c("New", "Quarter", "Full"))
ggplot() +
geom_tile(data = resistSurfS.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.S, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "South Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
covars.S2
length(which(values(covars.S$ndvi) < 0))
length(which(values(covars.S$ndvi) <= 0))
#Need to center and scale raster values so comparable to beta coeffs
covars.S2<- covars.S[[c("dist2rd","ndvi")]]
values(covars.S2$ndvi)[values(covars.S2$ndvi) < 0.2]<- NA
covars.S2$dist2rd<- scale(covars.S2$dist2rd, center = T, scale = T)
covars.S2$ndvi<- scale(covars.S2$ndvi, center = T, scale = T)
dist_ndvi.rast<- covars.S2$dist2rd * covars.S2$ndvi
covars.S2<- stack(covars.S2, dist_ndvi.rast) %>% brick()
scaled_lunar_S<- path.S$lunar %>%
scale(center = T, scale = T) %>%
as.data.frame() %>%
summarise(min=min(V1), mean=mean(V1), max=max(V1))
#New moon
resistSurfS_new<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$min +  #for new moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_new.df<- as.data.frame(resistSurfS_new, xy=T) %>%
mutate(phase = "New")
#Quarter moon
resistSurfS_quarter<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$mean +  #for quarter moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_quarter.df<- as.data.frame(resistSurfS_quarter, xy=T) %>%
mutate(phase = "Quarter")
#Full moon
resistSurfS_full<- exp(
betas_S["int"] +
betas_S["dist2rd"]*covars.S2$dist2rd +
betas_S["ndvi"]*covars.S2$ndvi +
betas_S["lunar"]*scaled_lunar_S$max +  #for full moon
betas_S["dist_ndvi"]*covars.S2$layer
)
resistSurfS_full.df<- as.data.frame(resistSurfS_full, xy=T) %>%
mutate(phase = "Full")
#Combine all results together for each level of lunar illumination
resistSurfS.df<- rbind(resistSurfS_new.df, resistSurfS_quarter.df, resistSurfS_full.df)
resistSurfS.df$phase<- factor(resistSurfS.df$phase, levels = c("New", "Quarter", "Full"))
ggplot() +
geom_tile(data = resistSurfS.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.S, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "South Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
# w/o intercept
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(color="firebrick") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
# w/o intercept
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(color="darkturquoise") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot() +
geom_tile(data = resistSurfN.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.N, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "North Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
ggplot() +
geom_tile(data = resistSurfS.df, aes(x, y, fill = layer)) +
scale_fill_viridis_c("Time Spent\nper Cell (s)", option = "inferno", na.value = "n") +
geom_point(data = dat.S, aes(x, y, color = id), size = 0.5, alpha = 0.2, show.legend = F) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x="Easting", y="Northing", title = "South Pantanal Resistance Surface") +
theme_bw() +
coord_equal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 18),
axis.text = element_text(size = 10),
strip.text = element_text(size = 16, face = "bold"),
plot.title = element_text(size = 22),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
guides(fill = guide_colourbar(barwidth = 30, barheight = 1)) +
facet_wrap(~ phase)
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_density_ridges(color="firebrick")
library(ggridges)
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_density_ridges(color="firebrick")
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value),
fill = "firebrick")
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas),
fill = "firebrick")
View(store.betas.long_N)
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas),
fill = "firebrick") +
geom_density_ridges()
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas)) +
geom_density_ridges(fill = "firebrick") +
geom_vline(yintercept = 0, size = 0.5)
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas)) +
geom_density_ridges(fill = "firebrick")
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas)) +
geom_density_ridges(fill = "firebrick") +
geom_vline(xintercept = 0, size = 0.5)
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, group = betas)) +
geom_density_ridges(fill = "firebrick") +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_brewer(palette = "Dark2") +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs") +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
# w/o intercept
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(x=betas, y=value)) +
geom_boxplot(color="firebrick") +
geom_hline(yintercept = 0, size = 0.5) +
labs(x="Beta Coefficients", y="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_N %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "inferno", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "magma", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "plasma", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "magma", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "viridis", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "North Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
ggplot(store.betas.long_S %>% filter(betas != "int"), aes(y=betas, x=value, fill = betas)) +
geom_density_ridges() +
scale_fill_viridis_d("Coeffs", option = "viridis", guide = guide_legend(reverse = TRUE)) +
geom_vline(xintercept = 0, size = 0.5) +
labs(y="Beta Coefficients", x="Value", title = "South Pantanal") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12))
