dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(10,ncol(xmat)-1))
n=nrow(xmat)
nparam=ncol(xmat)
nagg=length(ysoma)
#initial parameters
betas=matrix(0,nparam,1)
b.gamma=1
#for joint sampling of betas
var1=diag(1,nparam)
#stuff for gibbs sampler
jump1=list(betas=matrix(0.1,nparam,1),betas.joint=1)
accept1=list(betas=matrix(0,nparam,1),betas.joint=0)
accept.output=50
store.betas=matrix(NA,ngibbs,nparam)
store.b=matrix(NA,ngibbs,1)
store.llk=matrix(NA,ngibbs,1)
tmp=sample.betas(betas=betas,xmat=xmat,ysoma=ysoma,jump=jump1$betas,
b.gamma=b.gamma,nparam=nparam,var.betas=var.betas,
seg.id=seg.id,nagg=nagg)
betas=tmp$betas
accept1$betas=accept1$betas+tmp$accept
tmp=sample.betas.joint(betas=betas,xmat=xmat,ysoma=ysoma,
b.gamma=b.gamma,nparam=nparam,var.betas=var.betas,
seg.id=seg.id,nagg=nagg,var1=var1)
betas=tmp$betas
accept1$betas.joint=accept1$betas.joint+tmp$accept
# betas=betas.true
#sample b.gamma
b.gamma=Sample_bgamma(nparam=nparam,xmat=xmat,
ysoma=ysoma,betas=betas,b.gamma=b.gamma,
w=w,MaxIter=100,seg.id=seg.id,nagg=nagg)
p=get.llk(betas=betas,xmat=xmat,ysoma=ysoma,b.gamma=b.gamma,
seg.id=seg.id,nagg=nagg)
p
sum(p)
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(61)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
gamma1=0.1
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
gamma1=gamma1,w=w,MaxIter=MaxtIter)
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(61)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
w=w,MaxIter=MaxtIter)
traceback()
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(61)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
var.betas=c(100,rep(10,ncol(xmat)-1))
n=nrow(xmat)
nparam=ncol(xmat)
nagg=length(ysoma)
#initial parameters
betas=matrix(0,nparam,1)
b.gamma=1
#for joint sampling of betas
var1=diag(1,nparam)
#stuff for gibbs sampler
jump1=list(betas=matrix(0.1,nparam,1),betas.joint=1)
accept1=list(betas=matrix(0,nparam,1),betas.joint=0)
accept.output=50
store.betas=matrix(NA,ngibbs,nparam)
store.b=matrix(NA,ngibbs,1)
store.llk=matrix(NA,ngibbs,1)
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(61)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
w=w,MaxIter=MaxtIter)
set.seed(8)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-2,max=2),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
betas.true=betas=c( 2, 0 ,1,-2)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=rgamma(n,a,b)
fim=as.data.frame(xmat)
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/5000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
ysoma=ymat[seq1]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
range(fim$ysoma,na.rm=T)
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
store.theta=mod.res$theta
#look at correlation
k=cor(cbind(store.b,store.betas))
k[k < 0.5 & k > -0.5]=NA
k
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=400
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=700
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
ngibbs
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=950
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=970
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
dim(store.betas)
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
for (i in 1:4) plot(store.betas[nburn:ngibbs,i],type='l')
par(mfrow=c(1,1))
plot(store.b,type='l')
abline(h=b.true,col='red')
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=store.betas[ngibbs,]
rango=range(c(betas.estim,betas.true))
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=store.betas[ngibbs,]
rango=range(c(betas.estim,betas.true))
plot(betas.true,betas.estim,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
store.theta=mod.res$theta
#look at correlation
k=cor(cbind(store.b,store.betas))
k[k < 0.5 & k > -0.5]=NA
k
#look at overall convergence
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=970
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
#look at convergence betas
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
for (i in 1:4) plot(store.betas[nburn:ngibbs,i],type='l')
#look at convergence of b.gammas
par(mfrow=c(1,1))
plot(store.b,type='l')
abline(h=b.true,col='red')
#look at betas
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=store.betas[ngibbs,]
rango=range(c(betas.estim,betas.true))
plot(betas.true,betas.estim,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
betas.estim
rm(list=ls())
set.seed(8)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-2,max=2),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
betas.true=betas=runif(nparam+1)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=rgamma(n,a,b)
fim=as.data.frame(xmat)
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/5000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
ysoma=ymat[seq1]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
range(fim$ysoma,na.rm=T)
#export results
setwd('U:\\GIT_models\\resist')
write.csv(fim,'fake data.csv',row.names=F)
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(61)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
w=w,MaxIter=MaxtIter)
set.seed(8)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-2,max=2),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
betas.true=betas=runif(nparam+1)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=rgamma(n,a,b)
fim=as.data.frame(xmat)
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/5000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
ysoma=ymat[seq1]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
range(fim$ysoma,na.rm=T)
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
store.theta=mod.res$theta
#look at correlation
k=cor(cbind(store.b,store.betas))
k[k < 0.5 & k > -0.5]=NA
k
#look at overall convergence
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=970
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
nburn=100
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
nburn=300
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
for (i in 1:4) plot(store.betas[nburn:ngibbs,i],type='l')
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
#look at convergence of b.gammas
par(mfrow=c(1,1))
plot(store.b,type='l')
abline(h=b.true,col='red')
#look at betas
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=store.betas[ngibbs,]
rango=range(c(betas.estim,betas.true))
plot(betas.true,betas.estim,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
rm(list=ls())
set.seed(18)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-2,max=2),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
betas.true=betas=runif(nparam+1)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=rgamma(n,a,b)
fim=as.data.frame(xmat)
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/5000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
ysoma=ymat[seq1]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
range(fim$ysoma,na.rm=T)
#export results
setwd('U:\\GIT_models\\resist')
write.csv(fim,'fake data.csv',row.names=F)
rm(list=ls())
library('Rcpp')
library('mvtnorm')
set.seed(92)
setwd('U:\\GIT_models\\resist')
source('gibbs_resist.R')
source('gibbs_resist_func.R')
source('slice_b_gamma.R')
sourceCpp('resist_aux.cpp')
dat=read.csv('fake data.csv',as.is=T)
ind=grep('cov',colnames(dat))
xmat=data.matrix(cbind(1,dat[,ind]))
seg.id=dat$seg.id
#get y soma
tmp=unique(dat[,c('seg.id','ysoma')])
cond=!is.na(tmp$ysoma)
ysoma=tmp[cond,'ysoma']
ngibbs=1000
nburn=ngibbs/2
w=0.1
MaxIter=100
#priors
var.betas=c(100,rep(10,ncol(xmat)-1))
mod.res=gibbs_resist(ysoma=ysoma,xmat=xmat,seg.id=seg.id,
ngibbs=ngibbs,nburn=nburn,var.betas=var.betas,
w=w,MaxIter=MaxtIter)
set.seed(18)
setwd('U:\\GIT_models\\resist')
n=50000
nparam=3
xmat=matrix(runif(n*nparam,min=-2,max=2),n,nparam)
nomes.cov=paste0('covs',1:nparam)
colnames(xmat)=nomes.cov
n=nrow(xmat)
betas.true=betas=runif(nparam+1)
media=exp(cbind(1,xmat)%*%betas); range(round(media,3))
b.true=b=4
a=b*media
ymat=rgamma(n,a,b)
fim=as.data.frame(xmat)
fim$ysoma=NA
fim$seg.id=NA
#aggregate these data
ind=floor(c(seq(from=1,to=n,by=n/5000),n+1)) #has to include 1 and n to use all observations
for (i in 2:length(ind)){
seq1=ind[i-1]:(ind[i]-1)
n=length(seq1)
fim$seg.id[seq1]=i-1
ysoma=ymat[seq1]
fim$ysoma[ind[i]-1]=sum(ysoma)
}
max(fim$seg.id)
length(unique(fim$seg.id))
range(fim$ysoma,na.rm=T)
store.llk=mod.res$llk
store.b=mod.res$b.gamma
store.betas=mod.res$betas
store.theta=mod.res$theta
#look at correlation
k=cor(cbind(store.b,store.betas))
k[k < 0.5 & k > -0.5]=NA
k
#look at overall convergence
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=300
#look at overall convergence
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=300
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
par(mfrow=c(1,1))
plot(store.llk,type='l')
nburn=500
abline(v=nburn,col='red')
plot(store.llk[nburn:ngibbs],type='l')
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
par(mfrow=c(2,2),mar=rep(1,4))
for (i in 1:4) plot(store.betas[1:ngibbs,i],type='l')
for (i in 1:4) plot(store.betas[nburn:ngibbs,i],type='l')
par(mfrow=c(1,1))
plot(store.b,type='l')
abline(h=b.true,col='red')
#look at betas
par(mfrow=c(1,1),mar=rep(3,4))
betas.estim=store.betas[ngibbs,]
rango=range(c(betas.estim,betas.true))
plot(betas.true,betas.estim,xlim=rango,ylim=rango)
lines(rango,rango,col='red')
